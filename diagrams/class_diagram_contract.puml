@startuml class_diagram
skinparam linetype ortho
package "models" {
 class Model {}

 class Bid {
 id: str
 amount: float
 date_placed: Date
 contract: Contract
 contractor: User
 accepted: bool
 } 

 class Contract {
 id: int
 contract_title: str
 bidding_end_date: Date
 job_description: str
 contractee: User
closed: bool
 lowest_bid(): float
 numbers_bids(): int
 bids(): Bid[]
 expired(): bool
 } 

 class User {
 type: str
 agency_name: str
 } 

 abstract class AbstractUser{
 id: int
 password: str
 username: str
 email: str
 }
 
 Bid --|> Model
 Contract --|> Model
 AbstractUser --|> Model
 User --|> AbstractUser
 Bid *-r- Contract
 Bid --o Contract
 User --* Contract
 User --* Bid
 }

package "contract_views" {
class View {}
class CreateView {}
class TemplateView {}
class DetailView {}
abstract class LoginRequiredMixin {}

class ContractListView {
 template_name: str
 get_context_data(): Dict[str, any]
}

class ContractCreateView {
model: Contract
fields: str
success_url: str
form_valid(form: Form): HttpResponse
}

class ContractDetailView {
model: Contract
}

class ContractDeleteView {
    delete(request: Request): JsonResponse
}

View <|-- CreateView
View <|-- DetailView
View <|-- TemplateView
View <|-- ContractDeleteView
DetailView <|-- ContractDetailView
TemplateView <|-- ContractListView
CreateView <|-- ContractCreateView

LoginRequiredMixin <|-- ContractDetailView
LoginRequiredMixin <|-- ContractListView
LoginRequiredMixin <|-- ContractCreateView
LoginRequiredMixin <|-- ContractDeleteView


ContractCreateView *-- Contract
ContractListView *-- Contract
ContractDetailView *-- Contract
ContractDeleteView *-- Contract
}

package "forms" {
class Form {}

class CustomUserCreationForm {
model: User
fields: str[]
}

Form <|-- CustomUserCreationForm
}

CustomUserCreationForm *-- User
CreateView *-- Form

@enduml